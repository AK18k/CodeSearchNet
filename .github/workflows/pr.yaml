name: Benchmark Greeting
on: 
  pull_request:
    types: [opened, reopened] #temporarily adding reopened as a cheap way of testing this action

# split into two jobs so it runs in parallel, even if a little redundant
jobs:
  make_comment:
    if: contains(github.event.pull_request.body, 'This pull request represents a submission to the codesearchnet benchmark.')
    runs-on: ubuntu-latest
    steps:
    
    - name: Greeting
      run: |
        URI=https://api.github.com
        API_VERSION=v3
        API_HEADER="Accept: application/vnd.github.${API_VERSION}+json"
        AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"
        MESSAGE="@${USER} Thank you for your benchmark submission!  Can you please tell us a little bit about your approach and how you trained your models etc?  What modifications, if any, did you make on the baseline models provided in this repository? Thanks!"
        # Create a comment with APIv3 # POST /repos/:owner/:repo/issues/:issue_number/comments
        curl -XPOST -sSL \
        -d "{\"body\": \"$MESSAGE\"}" \
        -H "${AUTH_HEADER}" \
        -H "${API_HEADER}" \
        "${URI}/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/comments"
      env:
        USER: ${{ github.event.pull_request.user.login }}
        ISSUE_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Choose Reviewer Randomly
      run: |
        import random
        asignee = random.choice(['hamelsmu', 'hohsiangwu', 'mallamanis', 'mmjb'])
        print("::set-env name=ASIGNEE::{}".format(reviewer))
      shell: python
      
    - name: Make assignment
      run: |
        URI=https://api.github.com
        API_VERSION=v3
        API_HEADER="Accept: application/vnd.github.${API_VERSION}+json"
        AUTH_HEADER="Authorization: token ${GITHUB_TOKEN}"
        # Add assignee with APIv3 # POST /repos/:owner/:repo/issues/:issue_number/assignees
        curl -XPOST -sSL \
        -d "{\"assignees\": [\"${ASIGNEE}\"]}" \
        -H "${AUTH_HEADER}" \
        -H "${API_HEADER}" \
        "${URI}/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/assignees"
      env:
        ISSUE_NUMBER: ${{ github.event.pull_request.number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
